import logging

from aiogram import types
from aiogram.types import ReplyKeyboardMarkup, KeyboardButton, ParseMode
from utils.injector import ChangeState, StateController
import aiogram.utils.markdown as md

from bot.controller.StateController.States import States
from bot.repository.StateInfoRepository import StateInfoRepository
from bot.repository.SubmitRepository import SubmitRepository
from bot.repository.TaskRepository import TaskRepository
from bot.loader import dp


@StateController(States.student_menu, dp)
class StudentMenuController:
    taskRepository = TaskRepository
    submitRepository = SubmitRepository
    stateInfoRepository = StateInfoRepository

    UPDATE = "–û–±–Ω–æ–≤–∏—Ç—å —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã"
    CHOOSE_ACTION = "–í—ã–±–µ—Ä–∏—Ç–µ –∑–∞–¥–∞—á—É"
    HELP = "–ü–æ–º–æ—â—å"
    HELP_MESSAGE = \
f"""
*–ö–∞–∫ —Å–¥–∞—Ç—å –∑–∞–¥–∞—á—É?*
 1. –í –ø–æ—è–≤–∏–≤—à–µ–º—Å—è –ø–æ—Å–ª–µ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ –º–µ–Ω—é –Ω–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫—É —Å –∑–∞–¥–∞—á–µ–π, —Ä–µ—à–µ–Ω–∏–µ –Ω–∞ –∫–æ—Ç–æ—Ä—É—é —Å–æ–±–∏—Ä–∞–µ—Ç–µ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å.
 2. –ù–∞–∂–º–∏—Ç–µ –Ω–∞ `–û—Ç–ø—Ä–∞–≤–∏—Ç—å‚ñ∏`.
 3. –ü—Ä–∏–∫—Ä–µ–ø–∏—Ç–µ —Ñ–∞–π–ª —Å —Ä–µ—à–µ–Ω–∏–µ–º –∏ –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –µ–≥–æ –±–æ—Ç—É.
 4. –í –æ—Ç–≤–µ—Ç –≤—ã –ø–æ–ª—É—á–∏—Ç–µ id –≤–∞—à–µ–≥–æ —Ä–µ—à–µ–Ω–∏—è, –ø–æ –∫–æ—Ç–æ—Ä–æ–º—É –≤—ã —Å–º–æ–∂–µ—Ç–µ —É–∑–Ω–∞—Ç—å —Ä–µ–∑—É–ª—å—Ç–∞—Ç.
    
*–ö–∞–∫ —É–∑–Ω–∞—Ç—å —Ä–µ–∑—É–ª—å—Ç–∞—Ç?*
 1. –í –ø–æ—è–≤–∏–≤—à–µ–º—Å—è –ø–æ—Å–ª–µ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ –º–µ–Ω—é –≤—ã –º–æ–∂–µ—Ç–µ —É–≤–∏–¥–µ—Ç—å –∏—Ç–æ–≥–æ–≤—ã–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç –ø–æ –∫–∞–∂–¥–æ–π –∑–∞–¥–∞—á–µ (–ø–æ–¥—Ä–æ–±–Ω–µ–µ –≤ `–°—Ç–∞—Ç—É—Å—ã –∑–∞–¥–∞—á`).
 2. –ï—Å–ª–∏ –≤—ã —Ö–æ—Ç–∏—Ç–µ —É–∑–Ω–∞—Ç—å —Ä–µ–∑—É–ª—å—Ç–∞—Ç –ø–æ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–º—É —Ä–µ—à–µ–Ω–∏—é, —Ç–æ –Ω–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫—É —Å —Å–æ–æ—Ç–≤–µ—Ç—Å–≤—É—é—â–µ–π –∑–∞–¥–∞—á–µ–π.
 3. –ù–∞–∂–º–∏—Ç–µ –Ω–∞ `–ü–æ–ø—ã—Ç–∫–∏`.
 4. –í –æ—Ç–≤–µ—Ç –≤—ã –ø–æ–ª—É—á–∏—Ç–µ —Ç–∞–±–ª–∏—Ü—É —Å —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–º –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø–æ –∫–∞–∂–¥–æ–º—É –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–Ω–æ–º—É —Ä–µ—à–µ–Ω–∏—é (–ø–æ–¥—Ä–æ–±–Ω–µ–µ –≤ `–°—Ç–∞—Ç—É—Å—ã —Ä–µ—à–µ–Ω–∏–π`).
    
*–°—Ç–∞—Ç—É—Å—ã –∑–∞–¥–∞—á*
–ï—Å–ª–∏ –±—ã–ª–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ —Ö–æ—Ç—è –±—ã –æ–¥–Ω–æ —Ä–µ—à–µ–Ω–∏–µ, –≤—ã —Å–º–æ–∂–µ—Ç–µ —É–≤–∏–¥–µ—Ç—å –æ–¥–∏–Ω –∏–∑ —Å–ª–µ–¥—É—é—â–∏—Ö —Å—Ç–∞—Ç—É—Å–æ–≤:
 ‚ö¨ ‚úÖ ‚Äî –µ—Å–ª–∏ –±—ã–ª–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ —Ö–æ—Ç—è –±—ã –æ–¥–Ω–æ –ø—Ä–∞–≤–∏–ª—å–Ω–æ–µ —Ä–µ—à–µ–Ω–∏–µ.
 ‚ö¨ ‚ùå ‚Äî –µ—Å–ª–∏ –ø—Ä–∞–≤–∏–ª—å–Ω—ã—Ö —Ä–µ—à–µ–Ω–∏–π –Ω–µ—Ç.
 ‚ö¨ üîÑ ‚Äî –µ—Å–ª–∏ –ø—Ä–∞–≤–∏–ª—å–Ω—ã—Ö —Ä–µ—à–µ–Ω–∏–π –Ω–µ—Ç, –Ω–æ –µ—Å—Ç—å —Ä–µ—à–µ–Ω–∏—è, –∫–æ—Ç–æ—Ä—ã–µ —Ç–µ—Å—Ç–∏—Ä—É—é—Ç—Å—è.
     
*–°—Ç–∞—Ç—É—Å—ã —Ä–µ—à–µ–Ω–∏–π*
 ‚ö¨ `+` ‚Äî —Ä–µ—à–µ–Ω–∏–µ –ø—Ä–∞–≤–∏–ª—å–Ω–æ–µ.
 ‚ö¨ `-` ‚Äî —Ä–µ—à–µ–Ω–∏–µ –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ–µ.
 ‚ö¨ `?` ‚Äî —Ä–µ—à–µ–Ω–∏–µ —Ç–µ—Å—Ç–∏—Ä—É–µ—Ç—Å—è.
"""

    @classmethod
    async def create_CHOOSE_TASK_KEYBOARD(cls, student):
        CHOOSE_TASK_KEYBOARD = ReplyKeyboardMarkup(resize_keyboard=True)
        results = await cls.submitRepository.get_student_result(student)

        for task_name in sorted(results.keys()):
            result = results[task_name]
            CHOOSE_TASK_KEYBOARD.add(KeyboardButton(f" {task_name} | {cls.new_result_view(result)} ‚ñ∏"))

        CHOOSE_TASK_KEYBOARD.add(KeyboardButton(cls.UPDATE))
        CHOOSE_TASK_KEYBOARD.add(KeyboardButton(cls.HELP))
        return CHOOSE_TASK_KEYBOARD

    @classmethod
    async def handler(cls, message: types.Message):
        match message.text:

            case cls.UPDATE:
                await cls.prepare(message)

            case cls.HELP:
                await message.answer(text=cls.HELP_MESSAGE, parse_mode=ParseMode.MARKDOWN)

            case _:
                info = message.text.split()
                if len(info) < 2:
                    await message.answer("–Ø –≤–∞—Å –Ω–µ –ø–æ–Ω—è–ª, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞ –≤–æ—Å–ø–æ–ª—å–∑—É–π—Ç–µ—Å—å –∫–Ω–æ–ø–∫–æ–π –∏–∑ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã")
                    return
                if info[0] in cls.taskRepository.get_tasks():
                    cls.stateInfoRepository.get(message.from_user.id).chosen_task = info[0]
                    await ChangeState(States.task_menu_student, message)
                    return
                await message.answer("–Ø –≤–∞—Å –Ω–µ –ø–æ–Ω—è–ª, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞ –≤–æ—Å–ø–æ–ª—å–∑—É–π—Ç–µ—Å—å –∫–Ω–æ–ø–∫–æ–π –∏–∑ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã")

    @classmethod
    async def prepare(cls, message: types.Message):
        keyboard = await cls.create_CHOOSE_TASK_KEYBOARD(cls.stateInfoRepository.get(message.from_user.id).user_id)
        await message.answer(cls.CHOOSE_ACTION, reply_markup=keyboard)

    @classmethod
    def new_result_view(cls, res: str) -> str:

        match res[0]:

            case '+':
                return res.replace("+", "‚úÖ | –ü–æ–ø—ã—Ç–æ–∫: ")
            case '-':
                return res.replace("-", "‚ùå | –ü–æ–ø—ã—Ç–æ–∫: ")
            case '?':
                return res.replace("?", "üîÑ | –ü–æ–ø—ã—Ç–æ–∫: ")
            case '0':
                return res.replace("0", " –ü–æ–ø—ã—Ç–æ–∫: 0")
